import 'package:cli/cli.dart' as cli;
import 'package:cli/collections.dart';
import 'package:cli/types.dart' as typesDart;
import 'package:cli/collections.dart' as collectionDart;
import 'package:cli/dictionary.dart' as dictionaryDart;
import 'package:cli/final_and_const.dart' as finalAndCostDart;
import 'package:cli/fuctions.dart' as funtionsInDart;
import 'package:cli/arrows_and_lambda_fuctions.dart' as lambdaAndArrowInDart;
import 'package:cli/params.dart' as paramsInDart;
import 'package:cli/if_else_stamenst.dart' as ifElseInDart;
import 'package:cli/switch_case.dart' as switchCaseInDart;
import 'package:cli/for.dart' as main_for_in_dart;
import 'package:cli/do_while.dart' as main_do_while_in_dart;
import 'package:cli/POO/class_in_dart.dart' as class_basic_in_dart;
import 'package:cli/POO/class_whit_constructor.dart' as class_whit_constructor;
import 'package:cli/POO/getters_setterss.dart' as getters_and_setters;
void main(List<String> arguments) {
  // typesDart.learningTypeData();
  // collectionDart.collectionDart();
  // dictionaryDart.dictionaryDart();
  // finalAndCostDart.finalAndConst();
  // funtionsInDart.mainFunctions();
  // lambdaAndArrowInDart.mainFuctionsArrowsAndLambdas();
  // paramsInDart.mainparamsInsDart();
  // ifElseInDart.mainIfElse();
  // switchCaseInDart.mainSwitchCase();
  // main_for_in_dart.mainFor();
  // main_do_while_in_dart.mainDoWhile();
  // class_basic_in_dart.mainClassBasic();
  // class_whit_constructor.mainClassConstructor();
  getters_and_setters.mainGettersSetters();
}
